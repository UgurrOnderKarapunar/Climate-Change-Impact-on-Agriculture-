import pandas as pd
import plotly.express as px
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder, RobustScaler
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.metrics import accuracy_score
from sklearn.impute import SimpleImputer
from sklearn.tree import DecisionTreeRegressor
from sklearn.preprocessing import LabelEncoder
import seaborn as sns
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
from tensorflow.keras.optimizers import Adam
import matplotlib.pyplot as plt
import scipy.stats as stats
from xgboost import XGBRegressor
from tensorflow.keras.models import Sequential
from keras.layers import Dense, Input
pd.set_option('display.max_columns', None) 
pd.set_option('display.max_rows', None)     
pd.set_option('display.max_seq_item', None) # 
pd.set_option('display.float_format', '{:.2f}'.format)  
df = pd.read_csv("/kaggle/input/climate-change-impact-on-agriculture/climate_change_impact_on_agriculture_2024.csv")


DATA OVERVIEW AND E.D.A



### Verinin ilk 10 gözlemi-First 10 observations of the data
### Hedef değişkenimiz "Economic_Impact_Million_USD" değişkeni-Our target variable is 'Economic_Impact_Million_USD' variable
df.head(10)


df.info()

# Toplamda 10000 gözlem birimi ve 15 değişken verisetinde bulunmakta-
# There are a total of 10000 observation units and 15 variables in the dataset.

df.isnull().sum()

# Veride boş değer bulunmamakta
# There are no null values in the data

df.duplicated().sum()

# Veride duplica değer de yok
# There is no duplicate value in the data

### Sayısal Verilerin temel istatistik bilgileri-Basic statistical information of Numerical Data

df.describe().T

Sonuç:

1) Veri 10000 veri setinden ve 15 değişkende oluşmakta bunların 5 tanesi sayısal olmayan geri kalanlar sayılsal değişkendir. 2) Veride boş ve duplica gözlemler yoktur

Conclusion:

1) The data consists of 10000 data sets and 15 variables, 5 of which are non-numeric and the rest are numerical variables. 2) There are no empty or duplicate observations in the data


#**Veriyi daha kolay anlamlandırabilmek için veriyi X,y değişkenleri ayırıyoruz-In order to make sense of the data more easily, we separate the data into X,y variables.**


X=df.drop("Economic_Impact_Million_USD",axis=1)
y=df["Economic_Impact_Million_USD"]
